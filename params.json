{"name":"Appengine","tagline":"Go App Engine packages","body":"# Go App Engine packages\r\n\r\n[![Build Status](https://travis-ci.org/golang/appengine.svg)](https://travis-ci.org/golang/appengine)\r\n\r\nThis repository supports the Go runtime on App Engine,\r\nincluding both classic App Engine and Managed VMs.\r\nIt provides APIs for interacting with App Engine services.\r\nIts canonical import path is `google.golang.org/appengine`.\r\n\r\nSee https://cloud.google.com/appengine/docs/go/\r\nfor more information.\r\n\r\nFile issue reports and feature requests on the [Google App Engine issue\r\ntracker](https://code.google.com/p/googleappengine/issues/entry?template=Go%20defect).\r\n\r\n## Directory structure\r\nThe top level directory of this repository is the `appengine` package. It\r\ncontains the\r\nbasic APIs (e.g. `appengine.NewContext`) that apply across APIs. Specific API\r\npackages are in subdirectories (e.g. `datastore`).\r\n\r\nThere is an `internal` subdirectory that contains service protocol buffers,\r\nplus packages required for connectivity to make API calls. App Engine apps\r\nshould not directly import any package under `internal`.\r\n\r\n## Updating a Go App Engine app\r\n\r\nThis section describes how to update a traditional Go App Engine app to use\r\nthese packages.\r\n\r\n### 1. Update YAML files (Managed VMs only)\r\n\r\nThe `app.yaml` file (and YAML files for modules) should have these new lines added:\r\n```\r\nvm: true\r\nmanual_scaling:\r\n  instances: 1\r\n```\r\nSee https://cloud.google.com/appengine/docs/go/modules/#Go_Instance_scaling_and_class for details.\r\n\r\n### 2. Update import paths\r\n\r\nThe import paths for App Engine packages are now fully qualified, based at `google.golang.org/appengine`.\r\nYou will need to update your code to use import paths starting with that; for instance,\r\ncode importing `appengine/datastore` will now need to import `google.golang.org/appengine/datastore`.\r\nYou can do that manually, or by running this command to recursively update all Go source files in the current directory:\r\n(may require GNU sed)\r\n```\r\nsed -i '/\"appengine/{s,\"appengine,\"google.golang.org/appengine,;s,appengine_,appengine/,}' \\\r\n  $(find . -name '*.go')\r\n```\r\n\r\n### 3. Update code using deprecated, removed or modified APIs\r\n\r\nMost App Engine services are available with exactly the same API.\r\nA few APIs were cleaned up, and some are not available yet.\r\nThis list summarises the differences:\r\n\r\n* `appengine.Context` has been replaced with the `Context` type from `golang.org/x/net/context`.\r\n* Logging methods that were on `appengine.Context` are now functions in `google.golang.org/appengine/log`.\r\n* `appengine.Timeout` has been removed. Use `context.WithTimeout` instead.\r\n* `appengine.Datacenter` now takes a `context.Context` argument.\r\n* `datastore.PropertyLoadSaver` has been simplified to use slices in place of channels.\r\n* `delay.Call` now returns an error.\r\n* `search.FieldLoadSaver` now handles document metadata.\r\n* `urlfetch.Transport` no longer has a Deadline field; set a deadline on the\r\n  `context.Context` instead.\r\n* `aetest` no longer declares its own Context type, and uses the standard one instead.\r\n* `taskqueue.QueueStats` no longer takes a maxTasks argument. That argument has been\r\n  deprecated and unused for a long time.\r\n* `appengine/cloudsql` has not been ported yet.\r\n* `appengine.BackendHostname` and `appengine.BackendInstance` were for the deprecated backends feature.\r\n  Use `appengine.ModuleHostname`and `appengine.ModuleName` instead.\r\n* `appengine.IsCapabilityDisabled` and `appengine/capability` are obsolete.\r\n* Most of `appengine/file` and parts of `appengine/blobstore` are deprecated.\r\n  Use [Google Cloud Storage](https://godoc.org/google.golang.org/cloud/storage) instead.\r\n* `appengine/socket` is not required on Managed VMs. Use the standard `net` package instead.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}